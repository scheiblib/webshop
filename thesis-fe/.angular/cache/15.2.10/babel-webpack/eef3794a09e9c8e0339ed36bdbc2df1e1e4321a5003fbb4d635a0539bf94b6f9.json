{"ast":null,"code":"import { environment } from \"../environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiBaseUrl;\n  }\n  getUsers() {\n    // return this.http.get<User[]>(`${this.apiServerUrl}/users/findAllUsers`);\n  }\n  getUserById(id) {\n    return this.users.find(user => user.id === id);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAIA,SAAQA,WAAW,QAAO,gBAAgB;;;AAM1C,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,iBAAY,GAAGH,WAAW,CAACI,UAAU;EACL;EAEjCC,QAAQ;IAEb;EAAA;EAEFC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;EAChD;EAAC;qBAVUN,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAU,SAAXV,WAAW;IAAAW,YAFV;EAAM","names":["environment","UserService","constructor","http","apiBaseUrl","getUsers","getUserById","id","users","find","user","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\schei\\Desktop\\thesis\\thesis-fe\\src\\app\\service\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {User} from \"../model/user\";\nimport {environment} from \"../environment\";\nimport { USERS } from \"../mock-user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiServerUrl = environment.apiBaseUrl;\n  constructor(private http: HttpClient) { }\n\n  public getUsers(): Observable<User[]> {\n    \n    // return this.http.get<User[]>(`${this.apiServerUrl}/users/findAllUsers`);\n  }\n  getUserById(id: number) {\n    return this.users.find(user => user.id === id);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}