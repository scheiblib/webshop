{"ast":null,"code":"import { environment } from \"../environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ItemService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiBaseUrl;\n  }\n  getItems() {\n    return this.http.get(`${this.apiServerUrl}/items/findAll`);\n  }\n  getItemById(itemId) {\n    return this.http.get(`${this.apiServerUrl}/items/findItemById/${itemId}`);\n  }\n  addItems(items) {\n    return this.http.post(`${this.apiServerUrl}/items/addItems`, items);\n  }\n  static #_ = this.ɵfac = function ItemService_Factory(t) {\n    return new (t || ItemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemService,\n    factory: ItemService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAKA,SAAQA,WAAW,QAAO,gBAAgB;;;AAK1C,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,iBAAY,GAAGH,WAAW,CAACI,UAAU;EAGL;EAEjCC,QAAQ;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACC,YAAY,gBAAgB,CAAC;EACpE;EAEOC,WAAW,CAACC,MAAc;IAC/B,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACC,YAAY,uBAAuBE,MAAM,EAAE,CAAC;EACjF;EAEOC,QAAQ,CAACC,KAAS;IACvB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAS,GAAG,IAAI,CAACL,YAAY,iBAAiB,EAAEI,KAAK,CAAC;EAC7E;EAAC;qBAhBUV,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAY,SAAXZ,WAAW;IAAAa,YAFV;EAAM","names":["environment","ItemService","constructor","http","apiBaseUrl","getItems","get","apiServerUrl","getItemById","itemId","addItems","items","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\schei\\Desktop\\thesis\\thesis-fe\\src\\app\\service\\item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {User} from \"../model/user\";\nimport {Item} from \"../model/item\";\nimport {environment} from \"../environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n  private apiServerUrl = environment.apiBaseUrl;\n\n\n  constructor(private http: HttpClient) { }\n\n  public getItems(): Observable<Item[]> {\n    return this.http.get<Item[]>(`${this.apiServerUrl}/items/findAll`);\n  }\n\n  public getItemById(itemId: number): Observable<Item> {\n    return this.http.get<Item>(`${this.apiServerUrl}/items/findItemById/${itemId}`);\n  }\n\n  public addItems(items: []): Observable<Item[]> {\n    return this.http.post<Item[]>(`${this.apiServerUrl}/items/addItems`, items);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}