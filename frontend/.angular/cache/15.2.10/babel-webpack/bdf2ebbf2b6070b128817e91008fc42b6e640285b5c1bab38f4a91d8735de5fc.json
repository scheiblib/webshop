{"ast":null,"code":"import { environment } from \"../environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ItemService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiBaseUrl;\n  }\n  // getItems(): Observable<Item[]> {\n  //   return of(Items);\n  //   // return this.http.get<User[]>(`${this.apiServerUrl}/users/findAllUsers`);\n  // }\n  // getItemById(id: number) {\n  //   const user = Items.find(i => i.id === id)!;\n  //   return of(user);\n  // }\n  getItems() {\n    return this.http.get(`${this.apiServerUrl}/items/findAll`);\n  }\n  getItemById(itemId) {\n    return this.http.get(`${this.apiServerUrl}/items/findItemById/${itemId}`);\n  }\n  static #_ = this.ɵfac = function ItemService_Factory(t) {\n    return new (t || ItemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemService,\n    factory: ItemService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAKA,SAAQA,WAAW,QAAO,gBAAgB;;;AAM1C,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,iBAAY,GAAGH,WAAW,CAACI,UAAU;EAGL;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEOC,QAAQ;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACC,YAAY,gBAAgB,CAAC;EACpE;EAEOC,WAAW,CAACC,MAAc;IAC/B,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACC,YAAY,uBAAuBE,MAAM,EAAE,CAAC;EACjF;EAAC;qBArBUR,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAS,SAAXT,WAAW;IAAAU,YAFV;EAAM","names":["environment","ItemService","constructor","http","apiBaseUrl","getItems","get","apiServerUrl","getItemById","itemId","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\schei\\Desktop\\webshop\\frontend\\src\\app\\service\\item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable, of} from \"rxjs\";\r\nimport {User} from \"../model/user\";\r\nimport {Item} from \"../model/item\";\r\nimport {environment} from \"../environment\";\r\nimport {Items} from \"../mock-item\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ItemService {\r\n  private apiServerUrl = environment.apiBaseUrl;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // getItems(): Observable<Item[]> {\r\n  //   return of(Items);\r\n  //   // return this.http.get<User[]>(`${this.apiServerUrl}/users/findAllUsers`);\r\n  // }\r\n  // getItemById(id: number) {\r\n  //   const user = Items.find(i => i.id === id)!;\r\n  //   return of(user);\r\n  // }\r\n\r\n  public getItems(): Observable<Item[]> {\r\n    return this.http.get<Item[]>(`${this.apiServerUrl}/items/findAll`);\r\n  }\r\n\r\n  public getItemById(itemId: number): Observable<Item> {\r\n    return this.http.get<Item>(`${this.apiServerUrl}/items/findItemById/${itemId}`);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}